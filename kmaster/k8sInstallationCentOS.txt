Reference: https://computingforgeeks.com/install-kubernetes-cluster-on-centos-with-kubeadm/
https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/

Disable gpgcheck 
	gpgcheck=0
	repo_gpgcheck=0
	
	
sudo tee /etc/yum.repos.d/kubernetes.repo<<EOF
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=0
repo_gpgcheck=0
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF	



sudo yum -y install epel-release curl kubelet kubeadm kubectl --disableexcludes=kubernetes
----------------------------------------------------------
E0608/E0609 error
1.24.0 kubeadm init issue
	https://github.com/containerd/containerd/issues/4581
	mv /etc/containerd/config.toml /tmp/
	systemctl restart containerd
	kubeadm init

----------------------------------------------------
if kubelet fails to come up after upgrade to 1.24.1
	journalctl -u kubelet
	remove â€“network-plugin=cni in 
		: /var/lib/kubelet/kubeadm-flags.env

	systemctl restart kubelet
	kubeadm reset
	kubead join
		join may run into E0608/0609 - do what is mentioned above.
----------------------------------------------------

1. 
sudo yum -y update

2. 
vi /etc/hosts
	ip hostname
	
3. 
Add Kubernetes repository for CentOS 7 to all the servers.	
sudo tee /etc/yum.repos.d/kubernetes.repo<<EOF
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF	


4. 
sudo yum -y install epel-release vim git curl wget kubelet kubeadm kubectl --disableexcludes=kubernetes

5.
kubeadm  version
kubectl version --client

6. 
Disable SELinux and Swap

sudo setenforce 0
sudo sed -i 's/^SELINUX=.*/SELINUX=permissive/g' /etc/selinux/config

sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
sudo swapoff -a

7.
Add overlay and netfilter modules
sudo modprobe overlay
sudo modprobe br_netfilter

8. Configure ip tables
sudo tee /etc/sysctl.d/kubernetes.conf<<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

9. Bounce sysctl
sudo sysctl --system

10.
Install docker
- download easy install script
- execute it

11. Create docker configure directory
# Create required directories
sudo mkdir /etc/docker
sudo mkdir -p /etc/systemd/system/docker.service.d


12.
sudo tee /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2",
  "storage-opts": [
    "overlay2.override_kernel_check=true"
  ]
}
EOF


13.
tart and enable Services
sudo systemctl daemon-reload 
sudo systemctl restart docker
sudo systemctl enable docker

14.
Configure firewall
sudo systemctl disable --now firewalld


15. Initialize your control-plane node
lsmod | grep br_netfilter

sudo systemctl enable kubelet
sudo kubeadm config images pull

#########Only on master node
sudo kubeadm init \
  --upload-certs \
  --control-plane-endpoint=KMaster

16. 
 mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config
  
  
17. Install calico

######### On workers nodes only
18.   
Execute sudo join command


19. Back to master
kubectl cluster-info
kubectl get pod -n kube-system
kubectl get nodes