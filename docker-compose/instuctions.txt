1. Execute the following
docker-compose up

http://<ip>/docker-compose-spring-boot-0.0.1-SNAPSHOT/book


-----------------------------------------------------------------
How is it working?
------------------

Following are the values of application.properties

spring.application.name=book-manager
spring.datasource.url=jdbc:mysql://docker-mysql:3306/book_manager
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
server.port=8080
#lombok.equalsAndHashCode.callSuper = call

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy


----------------------------------------------------------------------

docker-mysql:
  image: mysql:latest
  environment:
    MYSQL_ROOT_PASSWORD: root		#root pwd
    MYSQL_DATABASE: book_manager	#Automatically mysql creates this db. All sql in 
									#/docker-entrypoint-initdb.d will get executed inside this db.
    MYSQL_USER: admin				#Automatically create a user with these details.
    MYSQL_PASSWORD: admin
#  ports:
#    - "3306:3306"
  volumes:
   - ./docker-compose-spring-boot/sql:/docker-entrypoint-initdb.d
	#Automatically it will execute all sql files inside the folder which is mapped to /docker-entrypoint-initdb.d
web:
  image: tomcat:latest
  # Environment variables do not appear to be getting loaded the first time Tomcat starts!
  environment:
    JDBC_URL: jdbc:mysql://docker-mysql:3306/mydb?connectTimeout=0&amp;socketTimeout=0&amp;autoReconnect=true
    JDBC_USER: admin
    JDBC_PASS: admin
  ports:
   - "80:8080"
  volumes:
   - ./docker-compose-spring-boot/target/:/usr/local/tomcat/webapps
  links:
    - docker-mysql
