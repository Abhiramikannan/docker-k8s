name: Maven Build and Test

on:
  push:
    branches:
      - master
  workflow_dispatch:      

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        language: [java]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4


#    - name: Run Super-Linter
#      uses: github/super-linter@v4
#      env: 
#        DEFAULT_BRANCH: master
#        VALIDATE_ALL_CODEBASE: true
#        GITHUB_TOKEN: ${{ secrets.VILAS_GITHUB_TOKEN }}

#sast tool 
#    - name: sast tools integration - codeql used here
#      uses: github/codeql-action/init@v2
#      with:
#        db-location: '${{ github.runner_temp }}/my_location'
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: java

#    - name: Perform CodeQL Analysis
#      uses: github/codeql-action/analyze@v2
      #with:
        # Optional. Specify a category to distinguish between multiple analyses
        # for the same tool and ref. If you don't use `category` in your workflow,
        # GitHub will generate a default category name for you
        #category: "my_category"
    - name: Setup CodeQL
      uses: github/codeql-action/setup@v1
      with:
        languages: ${{ matrix.language }}

    - name: Initialize CodeQL
      run: codeql database create java-database --language=java
      env:
        CODEQL_ACTION: codeql-action

        
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '11'  # You can specify your desired Java version here
        distribution: 'temurin' #other option distribution: 'adopt' ref. https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven
        
    - name: Build with Maven
      run: mvn clean install  # Replace with your actual Maven build command

    - name: Run Maven tests
      run: mvn test  # Run Maven tests
      
    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Dockerize application
      run: |
        docker build -t vilasvarghese/test .
        # Push the Docker image to a container registry if needed
        # docker push your-registry/your-image-name

    - name: Login to Docker
      uses: docker/login-action@v3
      with: 
        username: ${{ secrets.GIT_HUB_USERNAME }} 
        password: ${{ secrets.GIT_HUB_PASSWORD }}
        
    - name: Push to DockerHub
      run: docker push vilasvarghese/test
