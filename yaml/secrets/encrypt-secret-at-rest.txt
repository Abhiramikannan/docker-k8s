https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/
https://prathapreddy-mudium.medium.com/kubernetes-explained-encrypting-secret-data-at-rest-9004ef8bb449

https://www.youtube.com/watch?app=desktop&v=LTc5XV5Zr9M


cat /var/lib/etcd/member/snap/db
	data gets stored in plain text
	

Prove that secrets are visible in etcd in plain text 
		
	echo "secret1" | base64
	kubectl create secret generic mysecret --from-literal=key1=c2VjcmV0MQo=
	apt update -y
	apt install etcd-client
	or kubectl exec -it etcd-kmaster -n kube-system -- /bin/sh
	ETCDCTL_API=3 etcdctl --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key get /registry/secrets/default/mysecret1 | hexdump -C

	echo "c2VjcmV0MQo=" | base64 --decode
	
Confirm if encryption is configured in api-server
	cat /etc/kubernetes/manifests/kube-apiserver.yaml |grep "encryption"


cd /etc/kubernetes
mkdir enc
cd enc
-----------------------------
Create encryptionConfig.yaml as below
vi /etc/kubernetes/enc/encryptionConfig.yaml

apiVersion: apiserver.config.k8s.io/v1
kind: EncryptionConfiguration
resources:
  - resources:
      - secrets
    providers:
      - aescbc:
          keys:
            - name: key1
              secret: c2VjcmV0MQo=
      - identity: {} 
	  
-----------------------------	  


Edit the manifest for the kube-apiserver static pod: /etc/kubernetes/manifests/kube-apiserver.yaml similarly to this:

vi /etc/kubernetes/manifests/kube-apiserver.yaml

	add --encryption-provider-config=/etc/kubernetes/enc/encryptionConfig.yaml
	
	
	
add below into the volumeMounts section 
    - name: enc
      mountPath: /etc/kubernetes/enc
      readOnly: true

add below into 	volumes section 
  - name: enc
    hostPath:
      path: /etc/kubernetes/enc
      type: DirectoryOrCreate

	
	
-------------
Verify
	
	echo "vilassecret" | base64
	kubectl create secret generic mysecret1 --from-literal=key2=dmlsYXNzZWNyZXQK	
	
	kubectl create secret generic mysecret --from-literal=key1=c2VjcmV0MQo=
	
---------------




kubectl create secret generic first --from-literal=somekey=somevalue 	

kubectl get secrets 
kubectl describe sercret first 

decode it 


kubectl -n kube-system exec -it etcd-kmaster -- sh 

ETCDCTL_API=3 etcdctl --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key get /registry/secrets/default/mysecret



--------------------------------------------
Create encryptionConfig.yaml as below
vi /etc/kubernetes/pki/encryptionConfig.yaml

apiVersion: apiserver.config.k8s.io/v1
kind: EncryptionConfiguration
resources:
  - resources:
    - secrets
    providers:
    - aescbc:
        keys:
        - name: key1
          secret: ZdrOQ5P0v2lWKDNMQ4pfmqRVv7UTEPSi3ioPqvbxOys=
    - identity: {}
---------------------------------------------	  
add - --encryption-provider-config=/etc/kubernetes/pki/encryptionConfig.yaml
	
Very important: 	
	mv the file out and back to force stop of api server and start 
	restart kubelet and docker 
	
kubectl -n kube-system exec -it etcd-kmaster -- sh 

ETCDCTL_API=3 etcdctl --cacert=/etc/kubernetes/pki/etcd/ca.crt --cert=/etc/kubernetes/pki/etcd/server.crt --key=/etc/kubernetes/pki/etcd/server.key get /registry/secrets/default/mysecret
	