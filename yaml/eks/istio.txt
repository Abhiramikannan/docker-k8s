create eks cluster
	https://docs.aws.amazon.com/eks/latest/userguide/creating-a-vpc.html
configure kubectl access

install istioctl

install helm
	https://helm.sh/docs/intro/install/
	https://github.com/helm/helm/releases

install istio
	https://istio.io/latest/docs/setup/install/helm/

------------------------------------------------------
https://aws.amazon.com/blogs/opensource/getting-started-istio-eks/
youtube: https://www.youtube.com/watch?v=wCJEfqKpUf4
instructions to follow
	https://istio.io/latest/docs/setup/getting-started/
setting up kubectl for eks	
	https://docs.aws.amazon.com/eks/latest/userguide/create-kubeconfig.html
create eks cluster
	https://docs.aws.amazon.com/eks/latest/userguide/creating-a-vpc.html
configure kubectl access

install istioctl
istioctl install --set profile=demo
kubectl get po -A
kubectl get svc -A
kubectl label namespace default istio-injection=enabled

kubectl -n istio-system exec -it istio-ingressgateway-5b7797564c-5rs4c  -- netstat -anp

kubetl get gateway
kubetl get vs


example access
http://a9604dee45c834db1aab35c0287398bf-2143883773.us-west-2.elb.amazonaws.com/productpage



------------------------------------------------
create eks cluster
kubectl get all -A
istioctl install --set profile=demo -y
kubectl label namespace default istio-injection=enabled
in istioctl there is a sample app - 
cd istioctl
kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml

kubectl get services
kubectl get pods
kubectl exec "$(kubectl get pod -l app=ratings -o jsonpath='{.items[0].metadata.name}')" -c ratings -- curl -sS productpage:9080/productpage | grep -o "<title>.*</title>"
<title>Simple Bookstore App</title>
kubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml
istioctl analyze
kubectl get svc istio-ingressgateway -n istio-system

#export INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].port}')
export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].port}')
export INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')

export INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].nodePort}')
export SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="https")].nodePort}')

 #export INGRESS_HOST=worker-node-address
 echo "http://$GATEWAY_URL/productpage"
 
 Install Kiali and the other addons and wait for them to be deployed.
 kubectl apply -f samples/addons
  kubectl rollout status deployment/kiali -n istio-system
  istioctl dashboard kiali